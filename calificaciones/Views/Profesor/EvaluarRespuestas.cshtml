@{
    ViewBag.Title = "EvaluarRespuestas";
    Layout = "~/Views/Shared/ProfesorLayout.cshtml";
}

@model calificaciones.Entidades.Pregunta
<div class="container">
    <div>
        <h1 class="m-4"><b>Respuestas</b></h1>
        <h5> <b class="m-4">@Model.Tema.Nombre - @Model.Clase.Nombre</b></h5>
    </div>

    <div class="d-flex">
        <h3>@Model.Pregunta1</h3>
        <div class="p-1 ml-3">
            (
            @if (@Model.FechaDisponibleDesde == null)
            {
                <span>Sin fecha</span>
            }
            else
            {
                @Model.FechaDisponibleDesde.Value.ToString("dd/MM/yyyy");
            }
            -
            @if (@Model.FechaDisponibleHasta == null)
            {
                <span>Sin fecha</span>
            }
            else
            {
                @Model.FechaDisponibleHasta.Value.ToString("dd/MM/yyyy")

            }
            )
        </div>
    </div>
    @Html.Raw(TempData["Mensaje"])
    <br />
    <div class="breadcrumb btn-group btn-group-toggle" role="group">
        @Html.ActionLink("Todas", "EvaluarRespuestas", "Profesor", new { Nro = Model.Nro, Clase = Model.Clase.Nombre, Tipo = "Todas" }, new { @class = "btn btn-outline-info text-info" })
        @Html.ActionLink("Sin Corregir", "EvaluarRespuestas", "Profesor", new { Nro = Model.Nro, Clase = Model.Clase.Nombre, Tipo = "SinCorregir" }, new { @class = "btn btn-outline-info" })
        @Html.ActionLink("Correcta", "EvaluarRespuestas", "Profesor", new { Nro = Model.Nro, Clase = Model.Clase.Nombre, Tipo = "Correcta" }, new { @class = "btn btn-outline-info text-success" })
        @Html.ActionLink("Regular", "EvaluarRespuestas", "Profesor", new { Nro = Model.Nro, Clase = Model.Clase.Nombre, Tipo = "Regular" }, new { @class = "btn btn-outline-info text-warning" })
        @Html.ActionLink("Mal", "EvaluarRespuestas", "Profesor", new { Nro = Model.Nro, Clase = Model.Clase.Nombre, Tipo = "Mal" }, new { @class = "btn btn-outline-info text-danger" })
    </div>
</div>

<div class="container">
    <ul class="list-group">
        @{
            var flagPendiente = false;
            if (Model.RespuestaAlumnoes.Count > 0)
            {   
                foreach (var respuesta in Model.RespuestaAlumnoes)
                {
                    <li class="list-group-item justify-content-between align-items-center">
                        <div class="row align-items-center">
                            <div class="col-3">
                                <b>
                                    @respuesta.FechaHoraRespuesta
                                    <br />
                                    @respuesta.Alumno.Nombre @respuesta.Alumno.Apellido
                                </b>
                            </div>
                            <div class="col-6">
                                @Html.Raw(@respuesta.Respuesta.ToString())
                            </div>
                            <div class="col-3">

                                @if (@respuesta.ResultadoEvaluacion == null)
                                {
                                    if (!flagPendiente)
                                    {
                                <div class="btn-group btn-group-toggle d-flex">
                                    @Html.ActionLink("Correcta ", "EvaluarRespuestasGo", "Profesor", new { respuesta = respuesta.IdRespuestaAlumno, valor = 1 }, new { @class = "btn btn-sm btn-outline-success" })
                                    @Html.ActionLink("Regular", "EvaluarRespuestasGo", "Profesor", new { respuesta = respuesta.IdRespuestaAlumno, valor = 2 }, new { @class = "btn btn-sm btn-outline-warning" })
                                    @Html.ActionLink(" Mal ", "EvaluarRespuestasGo", "Profesor", new { respuesta = respuesta.IdRespuestaAlumno, valor = 3 }, new { @class = "btn btn-sm btn-outline-danger" })
                                </div>
                                        flagPendiente = true;
                                    }
                                    else
                                    {
                                        <div class="text-center">
                                            <cite title="Source Title">Pendiente</cite>
                                        </div>
                                    }

                                }
                                else
                                {
                                    switch (respuesta.ResultadoEvaluacion.IdResultadoEvaluacion)
                                    {
                                        //@Html.Raw renderiza html
                                        case 1:
                                            @Html.Raw("<b class = 'text-success'>");
                                            break;
                                        case 2:
                                            @Html.Raw("<b class = 'text-warning'>");
                                            break;
                                        default:
                                            @Html.Raw("<b class = 'text-danger'>");
                                            break;
                                    }
                                    @respuesta.ResultadoEvaluacion.Resultado
                                    @Html.Raw("</b>");
                                    var sinEvaluar = Convert.ToInt32(ViewData["SinEvaluar"]);
                                    var mejorRespuesta = ViewData["MejorPregunta"];
                                    if (sinEvaluar == 0 && mejorRespuesta.Equals(false)) //me fijo si ya no hay respuestas sin evaluar (tienen que haber 0 respuestas sin evaluar)
                                    {
                                        //muestro el botón
                                        @Html.ActionLink("Mejor Respuesta", "MejorRespuesta", "Profesor", new { respuesta = respuesta.IdRespuestaAlumno }, new { @class = "btn btn-sm btn-info float-right" })
                                    }

                                    if (@respuesta.MejorRespuesta)
                                    {
                                        <span class="badge badge-info">Mejor respuesta</span>
                                    }

                                }


                            </div>
                        </div>
                    </li>
                }

            }
            else
            {
                <div class="text-center">
                    <h4> <cite title="Source Title">No se encontraron respuestas.</cite></h4>

                </div>
            }

        }
    </ul>
</div>



